
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from bot.state.register import RegisterState
from bot.utils.api import create_user
from bot.keyboards.survey_kb import survey_kb


async def start_register(message: Message, state: FSMContext):
    await message.answer(f'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: \n'
                         f'–£–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è')
    await state.set_state(RegisterState.regName)


async def register_name(message: Message, state: FSMContext):
    await message.answer(f'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: \n'
                         f'–£–∫–∞–∂–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ \n'
                         f'–¢–µ–ª–µ—Ñ–æ–Ω –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 8–•–•–•–•–•–•–•–•–•–•')
    await state.update_data(regname=message.text)
    await state.set_state(RegisterState.regPhonNum)


async def register_phone_num(message: Message, state: FSMContext):
    await state.update_data(regphone=message.text)
    reg_data = await state.get_data()
    reg_name = reg_data.get('regname')
    reg_phone = reg_data.get('regphone')
    msg = (f'–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {reg_name}! \n'
           f'–¢–µ–ª–µ—Ñ–æ–Ω: {reg_phone}')
    await message.answer(msg)
    create_user(message.from_user.id, reg_name, reg_phone)
    await state.clear()
    await message.answer(f'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! \n'
                         f'üëá–ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ –æ–ø—Ä–æ—Å–∞–º?üëá', reply_markup=survey_kb)

